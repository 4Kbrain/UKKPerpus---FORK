import { getServerSession } from "#auth";
import prisma from "~/lib/prisma";

export default defineEventHandler(async (event) => {
  const session = await getServerSession(event);

  if (!session?.user) {
    throw createError({ statusCode: 401, statusMessage: "Unauthorized" });
  }
  const userId = session.user.id;

  const existingUser = await prisma.user.findUnique({
    where: { id: userId },
  });

  if (!existingUser) {
    throw createError({ statusCode: 400, statusMessage: "User not found" });
  }

  const isFavoritExist = await prisma.favorit.findFirst({
    where: {
      userId,
    },
  })

})
